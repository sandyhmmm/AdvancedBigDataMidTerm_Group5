import numpy as np
from sklearn import linear_model
from sklearn.cross_validation import train_test_split
from sklearn import metrics
from sklearn import preprocessing


sparkHome = os.environ.get('SPARK_HOME')
fileLocation = sparkHome + "/Assignment1/winequality-white.csv";
f = open(fileLocation);
f.readline();
data = np.loadtxt(fname=f,delimiter = ';');
X = data[:,0:10];
#Converting it to binary classification
Y = np.where(data[:,11] >= 7, 1, 0);

#Split training/test sets
X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.40);

#Scaling features 
scaler = preprocessing.StandardScaler().fit(X_train);
X_train = scaler.transform(X_train);
X_test = scaler.transform(X_test);

#Algorithm being used
clf = linear_model.SGDClassifier(loss="hinge", penalty="l2",n_iter=100)

#Training the model
clf.fit(X_train, Y_train);

print clf.coef_
print clf.intercept_

#Predicting on test set
Y_train_pred = clf.predict(X_test);

#Printing out accuracy score
print metrics.accuracy_score(Y_test,Y_train_pred);

#Printing classification report(precision,recall,f1-score,support)
print metrics.classification_report(Y_test,Y_train_pred)

#Printing confusion matrix
print metrics.confusion_matrix(Y_test,Y_train_pred)

Results:
[[ 0.23582865 -0.03285622 -0.07612414  1.16907422  0.06973195 -0.00862562
  -0.16710036 -1.38987926  0.33556938  0.03189742  0.37361377]]
[-1.24696281]
0.8
             precision    recall  f1-score   support

          0       0.85      0.91      0.88      1559
          1       0.51      0.39      0.44       401

avg / total       0.78      0.80      0.79      1960

[[1412  147]
 [ 245  156]]