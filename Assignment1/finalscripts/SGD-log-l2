import numpy as np
from sklearn import linear_model
from sklearn.cross_validation import train_test_split
from sklearn import metrics
from sklearn import preprocessing

#Load and parse the data 
sparkHome = os.environ.get('SPARK_HOME')
fileLocation = sparkHome + "/Assignment1/winequality-white.csv";
f = open(fileLocation);
f.readline();
data = np.loadtxt(fname=f,delimiter = ';');
X = data[:,0:10];

#Converting it to binary classification
Y = np.where(data[:,11] >= 7, 1, 0);

#Split training/test sets
X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.40);

#Scaling features 
scaler = preprocessing.StandardScaler().fit(X_train);
X_train = scaler.transform(X_train);
X_test = scaler.transform(X_test);

#Algorithm being used
clf = linear_model.SGDClassifier(loss="log", penalty="l2",n_iter=100)

#Training the model
clf.fit(X_train, Y_train);

print clf.coef_
print clf.intercept_

#Predicting on test set
Y_train_pred = clf.predict(X_test);

#Printing out accuracy score
print metrics.accuracy_score(Y_test,Y_train_pred);

#Printing classification report(precision,recall,f1-score,support)
print metrics.classification_report(Y_test,Y_train_pred)

#Printing confusion matrix
print metrics.confusion_matrix(Y_test,Y_train_pred)

Results:
[[ 0.70235677 -0.52049687 -0.212146    1.74089965 -0.27175796  0.09911796
   0.17354322 -2.32767611  0.39493329  0.5903768  -0.06067783]]
[-1.73362847]
0.804591836735
             precision    recall  f1-score   support

          0       0.82      0.96      0.88      1532
          1       0.63      0.25      0.36       428

avg / total       0.78      0.80      0.77      1960

[[1468   64]
 [ 319  109]]